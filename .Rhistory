orni
library("tuneR")
library("seewave")
orni
data(orni)
orni
s <- orni
oscillo(orni)
data(orni)
s<-orni
oscillo(orni)
s
play(orni)
tuneR::setWavPlayer('/usr/bin/afplay')
play(orni)
s
play(orni)
s
oscillo(orni)
s
oscillo(orni, name="ORNI")
oscillo(orni, main="ORNI")
oscillo(orni, title="ORNI")
sound1p<-periodogram(sound1)
sound1p<-periodogram(s)
plot(sound1p)
plot(sound1p, main="Periodogram Orni")
oscillo(orni, title="Oscillogram Orni")
sound1p<-periodogram(s) #ESTO DA UN ERROR PERO NO AFECTA
plot(sound1p, main="Periodogram Orni")
ls
#READWAVE
derrape <- readWave(file.choose()) #Abre explorador para elegir archivo
guitarra <- readWave(file.choose())
camion <- readWave(file.choose())
fire <- readWave(file.choose())
tren <- readWave(file.choose())
#OSCILLO
oscillo(derrape, title="DERRAPE")
oscillo(guitarra, title="GUITARRA")
oscillo(camion, title="CAMION")
oscillo(fire, fastdisp=TRUE, title="FIRE")
oscillo(tren, title="TREN")
camion
plot(sound1p, main="Periodogram Orni")
derrape_p <- periodogram(derrape, main="Periodogram Derrape")
derrape_p <- periodogram(derrape)
plot(derrape_p, main="Periodogram Derrape")
guitarra_p <- periodogram(guitarra)
plot(guitarra_p, main="Periodogram Guitarra")
camion_p <- periodogram(camion)
plot(camion_p, main="PEriodogram Camión")
fire_p <- periodogram(fire)
plot(fire_p, main="Periodogram Fire")
tren_p <- periodogram(tren)
plot(tren_p, main="Periodogram Tren")
tren_copy <- tren
tren
tren_copy.downsampled <- downsample(tico, samp.rate =11025)
tico.downsampled <- downsample(tico, tren_copy.rate =11025)
tico.downsampled <- downsample(tren_copy, sample.rate =11025)
tico.downsampled <- downsample(tico, sample.rate =11025)
tico.downsampled <- downsample(tren_copy, samp.rate =11025)
tren_copy
tico.downsampled <- downsample(tren_copy, samp.rate =9000)
tren_copy
tren_copy
camion
derrape
derrape_copy <- derrape
tico.downsampled <- downsample(derrape_copy, samp.rate =9000)
tico.downsampled@samp.rate
derrape_copy
derrape
derrape
tico.downsampled <- downsample(derrape, samp.rate =9000)
derrape_copy <- tico.downsampled@samp.rate
derrape_copy
derrape
derrape
tico.downsampled <- downsample(derrape, samp.rate =10050)
derrape
tico.downsampled <- downsample(tico, samp.rate =11050)
tico.downsampled <- downsample(derrape, samp.rate =11050)
derrape_copy <- tico.downsampled@samp.rate
derrape
derrape_copy
tico.downsampled@samp.rate
derrape
derrape_c <- derrape
tico.downsampled <- downsample(derrape, samp.rate =11050)
derrape_copy.downsampled@samp.rate
tico.downsampled@samp.rate
derrape_c.downsampled <- downsample(derrape, samp.rate =11050)
tico.downsampled@samp.rate
derrape
derrape_c
derrape_c.downsampled <- downsample(derrape_c, samp.rate =11050)
tico.downsampled@samp.rate
derrape
derrape_c
derrape
derrape_c <- derrape
derrape_c.downsampled <- downsample(derrape_c, samp.rate =11050)
derrape_c.downsampled@samp.rate
derrape
derrape_c
install.library("TuneR")
install.packages("TuneR")
install.packages("seewave")
install.packages("tuneR")
derrape
derrape_downsampled <- downsample(derrape, rate= 11050)
derrape_downsampled <- downsample(derrape, samp.rate = 11050)
derrape_downsampled
derrape
derrape.oversampled <- resamp(derrape, g="")
install.packages("signal")
install.packages("signal")
install.packages("signal")
install.packages("signal")
derrape
derrape.oversampled <- resamp(derrape, samp.rate = 24000)
library(signal)
derrape.oversampled <- resamp(derrape, samp.rate = 24000)
library("signal")
derrape.oversampled <- resamp(derrape, samp.rate = 24000)
derrape.oversampled <- resample(derrape, samp.rate = 24000)
library(seewave)
derrape.oversampled <- resample(derrape, samp.rate = 24000)
derrape.oversampled <- resample(derrape, samp.rate = 24000)
derrape.oversampled <- resample(derrape, 24000)
derrape_oversampled <- resample(derrape, 24000)
derrape_c
derrape
derrape
derrape_oversampled <- resample(derrape_downsampled, 24000)
library("seewave")
derrape_down <- derrape.downsampled
derrape_down
derrape_resampled <- resamp(derrape_down, f= 11050, g=24000, output="Wave")
#BAJAR LA FRECUENCIA DE MUESTREO
derrape
#BAJAR LA FRECUENCIA DE MUESTREO
derrape
derrape.downsampled <- downsample(derrape, samp.rate = 11050)
derrape #ESTA MUESTRA LA VARIABLE ORIGINAL CON SU SAMPLE RATE ORIGINAL
derrape.downsampled #AQUÍ YA SE MUESTRA EL SAMPLE RATE CAMBIADO
library("seewave")
derrape.resampled<- resamp(derrape.downsampled, f= 11050, g=24000, output="Wave")
derrape.resampled
oscillo(derrape_down, title="derrape_down")
oscillo(derrape.downsampled, title="derrape_down")
oscillo(derrape.resampled, title="derrape_resamp")
periodogram(derrape.downsampled)
derrape_d_p <- periodogram(derrape.downsampled)
derrape_d_p <- periodogram(derrape.downsampled)
plot(derrape_d_p, main="Periodogram Derrape_downsample")
derrape_r_p <- periodogram(derrape.resampled)
plot(derrape_r_p, main="Periodogram Derrape_resampled")
#AUTOC
autoc(derrape.downsampled)
library("seewave")
#AUTOC
autoc(derrape.downsampled)
autoc(guitarra)
guitarra
guitarra.downsampled <- downsample(guitarra, samp.rate = 22050)
autoc(guitarra.downsampled)
autoc(guitarra.downsampled, name="Autoc Guitarra")
autoc(guitarra.downsampled, main="Autoc Guitarra")
guitarra.downsampled <- downsample(guitarra, samp.rate = 11050)
autoc(guitarra.downsampled, main="Autoc Guitarra")
autoc(guitarra, main="Autoc Guitarra")
autoc(orni, main="Orni")
write.csv(db, file="orni.csv")
#PARA SACAR LOS VALORES EXACTOS SE SACA LA ONDA COMO DATAFRAME  OBTENER COMO CSV
#ESTO MUESTRA LOS VALORES PERO NO SE VE VISUALMENTE LOS ARMÓNICOS NI LA FRECUENCIA FUNDAMENTAL
#ESO HAY QUE DETERMINARLO MANUALMENTE  (TOLERANCIA +- 10%)
autoc <- autoc(orni)
#PARA SACAR LOS VALORES EXACTOS SE SACA LA ONDA COMO DATAFRAME  OBTENER COMO CSV
#ESTO MUESTRA LOS VALORES PERO NO SE VE VISUALMENTE LOS ARMÓNICOS NI LA FRECUENCIA FUNDAMENTAL
#ESO HAY QUE DETERMINARLO MANUALMENTE  (TOLERANCIA +- 10%)
autoc_orni <- autoc(orni)
write.csv(autoc_orni, file="orni.csv")
setwd("/home/alcss/Documentos/Programación/Clase")
datos <- read.csv("orni.csv")
datos
autoc_orni
y_min <- min(datos$y)
y_min
nota_fundamental <- min(datos$y)
nota_fundamental
#por cada filtro hacer un periodogram
derrape
plot(der_per, main="Periodogram Derrape Original")
#por cada filtro hacer un periodogram
der_per <- periodogram(derrape)
plot(der_per, main="Periodogram Derrape Original")
der_filt <- ffilter(15000, 20000)
library("seewave")
der_filt <- ffilter(15000, 20000)
der_filt <- ffilter(der_per, 15000, 20000)
plot(der_filt)
der_filt
der_filt <- ffilter(der_per, 15000, 20000)
der_filt <- ffilter(der_per, from=15000, to=20000, bandpass=TRUE)
der_filt
der_filt <- ffilter(der_per, channel = 1, from=15000, to=20000, bandpass=TRUE)
der_filt <- ffilter(wave=der_per, channel = 1, from=15000, to=20000, bandpass=TRUE)
der_filt <- ffilter(wave=der_per, from=15000, to=20000, bandpass=TRUE)
der_filt <- ffilter(der_per, from=15000, to=20000, bandpass=TRUE)
der_filt <- ffilter(derrape, from=15000, to=20000, bandpass=TRUE)
der_filt
der_filt <- ffilter(derrape, from=15000, to=20000, bandpass=TRUE, output="Wave")
der_filt
plot(der_filt, main="Periodogram Derrape Filtrado")
der_filt
oscillo(fer_filt)
oscillo(der_filt)
oscillo(der_filt, name="Oscillograma Derrape filtrado")
oscillo(der_filt, title="Oscillograma Derrape filtrado")
plot(der_per, main="Periodogram Derrape Original")
der_filt <- ffilter(derrape, from=5000, to=30000, bandpass=TRUE, output="Wave")
der_filt
oscillo(der_filt, title="Oscillograma Derrape filtrado")
plot(der_filt, main="Periodogram Derrape Filtrado")
der_filt
plot(der_filt, main="Periodogram Derrape Filtrado")
der_filt_per <- periodogram(der_filt)
plot(der_filt_per, main="Periodogram Derrape Filtrado")
guitar_per <- periodogram(guitar_per)
guitar_per <- periodogram(guitarra)
plot(guitar_per, main="Periodogram Guitarra Original")
guitar_filt <- ffilter(guitarra, from=500, to 3000, bandpass=TRUE, output="Wave")
guitar_filt <- ffilter(guitarra, from=500, to=3000, bandpass=TRUE, output="Wave")
guitar_filt
oscillo(guitar_filt)
oscillo(guitar_filt, title="Osicllograma Guitarra Filtrado")
guitar_filt_per <- periodogram(guitar_filt)
plot(guitar_filt_per, main="Periodogram Guitarra Filtrado")
plot(guitar_per, main="Periodogram Guitarra Original")
guitar_filt <- ffilter(guitarra, from=500, to=3100, bandpass=TRUE, output="Wave")
guitar_filt
guitar_filt_per <- periodogram(guitar_filt)
plot(guitar_filt_per, main="Periodogram Guitarra Filtrado")
plot(guitar_per, main="Periodogram Guitarra Original")
camion_per <- periodogram(camion)
plot(camion_per, main="Periodogram Camion Original")
camion_gilt <- ffilter(guitarra, from=0, to=400, bandpass=TRUE, output="Wave")
camion_filt <- ffilter(guitarra, from=0, to=400, bandpass=TRUE, output="Wave")
camion_filt
camion_filt_per <- periodogram(camion_filt)
plot(camion_filt_per, main="Periodogram Camion Filtrado")
camion_filt <- ffilter(guitarra, from=0, to=500, bandpass=TRUE, output="Wave")
camion_filt
camion_filt_per <- periodogram(camion_filt)
plot(camion_filt_per, main="Periodogram Camion Filtrado")
camion_filt <- ffilter(guitarra, from=0, to=1000, bandpass=TRUE, output="Wave")
camion_filt
camion_filt_per <- periodogram(camion_filt)
plot(camion_filt_per, main="Periodogram Camion Filtrado")
camion_filt <- ffilter(camion_filt, from=0, to=1000, bandpass=TRUE, output="Wave")
camion_filt
camion_filt_per <- periodogram(camion_filt)
plot(camion_filt_per, main="Periodogram Camion Filtrado")
camion_filt <- ffilter(camion, from=0, to=1000, bandpass=TRUE, output="Wave")
camion_filt
camion_filt_per <- periodogram(camion_filt)
plot(camion_filt_per, main="Periodogram Camion Filtrado")
ls
do_pecho <- readWave("Do.mp3")
do_pecho <- readWave("./Do.mp3")
do_pecho <- readWave(filename = "Do.mp3")
do_pecho <- readWave(filename = "./Do.mp3")
#Escuchar despues de flitrar
#EXPERIMENTO
do_pecho <- readWave(file.choose())
do_pecho
#Escuchar despues de flitrar
#EXPERIMENTO
do_pecho <- readWave(file.choose())
#Escuchar despues de flitrar
#EXPERIMENTO
do_pecho <- readWave(file.choose())
do_pecho
library("tuneR")
library("seewave")
oscillo(do_pecho, name="Ocillograma Do de Pecho")
oscillo(do_pecho, title="Ocillograma Do de Pecho")
do_pecho
do_pecho
do_pecho
#Escuchar despues de flitrar
#EXPERIMENTO
do_pecho <- readWave(file.choose())
do_pecho_per <- periodogram(do_pecho)
plot(do_pecho_per, main="Periodogram Do de Pecho")
sol <- readWave(file.choose())
sol <- readWave(file.choose())
sol <- readWave(file.choose())
sol
oscillo(sol, title="Oscillograma Sol")
sol_per <- periodogram(sol)
plot(sol_per, main="Periodogram Sol")
library("tuneR")
library("seewave")
#EXPERIMENTO
do5<- readWave(file.choose())
do5
do5_oscillo <- oscillo(do5, title="Oscillogram DO5")
do5_oscillo
plot(do5_oscillo, main="Oscillogram DO5")
do5_per <- periodogram(do5, main="Periodogram DO5")
plot(do5_per)
do5_per
do5_filtrado <- ffilter(do5, from=0, to=5000, bandpass=TRUE, output="Wave")
plot(periodogram((do5_filtrado, main="Periodogram DO5 Filtrado")))
plot(periodogram(do5_filtrado, main="Periodogram DO5 Filtrado"))
do5_filtrado_per <- periodogram(do5_filtrado, main="Periodogram DO5 Filtrado")
do5_filtrado_per
library("stats")
do5_pgram <- spec.pgram(do5_filtrado)
do5_pgram <- spec.pgram(do5_filtrado_per)
do5_pgram <- spec.pgram(do5)
dfDo5 <- as.data.frame(do5_per)
do5_spec <- spec(do5)
do5
do5.downsamped <- downsample(do5, samp.rate =24000)
do5_spec <- spec(do5.downsamped)
dfDo5 <- as.data.frame(frecuencia=do5_spec$freq)
dfDo5
do5_spec
plot(do5_spec)
dfDo5 <- as.data.frame(frecuencia=do5_spec$freq, densidad=do5_spec$spec)
dfDo5 <- as.data.frame(do5_spec)
dfDo5
max(dfDo5)
min(dfDo5)
library("seewave")
#AUDIOS NUESTROS BANDA DE BARK 8000 a 9200 -> aplicamos periodogram y obtenemos la frecuencia
#De aparición de cada frecuencia de ruido, (aplicamos un arbol de huffman en eso)
#Agregar al final la códificicación
guitar_bark <- ffilter(guitar_bark, from=8000, to=9200, bandpass=TRUE, output="Wave")
#AUDIOS NUESTROS BANDA DE BARK 8000 a 9200 -> aplicamos periodogram y obtenemos la frecuencia
#De aparición de cada frecuencia de ruido, (aplicamos un arbol de huffman en eso)
#Agregar al final la códificicación
guitar_bark <- ffilter(guitar, from=8000, to=9200, bandpass=TRUE, output="Wave")
#AUDIOS NUESTROS BANDA DE BARK 8000 a 9200 -> aplicamos periodogram y obtenemos la frecuencia
#De aparición de cada frecuencia de ruido, (aplicamos un arbol de huffman en eso)
#Agregar al final la códificicación
guitar_bark <- ffilter(guitarra, from=8000, to=9200, bandpass=TRUE, output="Wave")
guitar_bark
guitar_bark_per <- periodogram(guitar_bark, main="Periodogram Guitarra Bark")
plot(guitar_bark_per)
plot(guitar_per)
plot(guitar_per, title="Periodogram Guitarra")
plot(guitar_per, main="Periodogram Guitarra")
plot(guitar_bark_per, main="Periodogram Guitarra Bark")
#AUDIOS NUESTROS BANDA DE BARK 8000 a 9200 -> aplicamos periodogram y obtenemos la frecuencia
#De aparición de cada frecuencia de ruido, (aplicamos un arbol de huffman en eso)
#Agregar al final la códificicación
guitar_bark <- ffilter(guitarra, from=8000, to=9200, bandpass=TRUE, output="Wave")
guitar_bark_per <- periodogram(guitar_bark)
plot(guitar_per, main="Periodogram Guitarra")
plot(guitar_bark_per, main="Periodogram Guitarra Bark")
derrape_bark <- ffilter(derrape, from=8000, to=9200, bandpass=TRUE, output="Wave")
derrape_bark_per <- periodogram(derrape_bark, main="Periodogram Derrape")
plot(derrape_bark_per, main="Periodogram Derrape")
test_df <- as.data.frame.matrix(derrape_bark_per)
df <- data.frame(derrape_bark_per)
test_p <- periodogram(derrape_bark, plot=FALSE)
df <- data.frame(derrape_bark_per)
test_p
test_p <- periodogram(derrape_bark, plot=FALSE)
derrape_bark
test_p <- periodogram(derrape_bark, plot=FALSE)
df <- as.data.frame(derrape_bark_per)
p<- derrape_bark_per
df <- as.data.frame(cbind(freq = p$freq, spec = p$spec))
p
df <- data.frame(frequency = p@freq, amplitude = p@amp)
df <- data.frame(frequency = p@freq, normalize = p@normalize)
plot(df)
df
oscillo(derrape, main="Oscillo Derrape")
#analizar relacion de spec con oscilo y periodogram
library("seewave")
oscillo(derrape, main="Oscillo Derrape")
oscillo(derrape, name="Oscillo Derrape")
oscillo(derrape, title="Oscillo Derrape")
derrape.per <- periodogram(derrape)
plot(derrape.per)
spec(derrape)
#analizar relacion de spec con oscilo y periodogram
library("seewave")
oscillo(derrape, title="Oscillo Derrape") #Amplitud vs Tiempo
derrape.spec <- spec(derrape) #Amplitud vs Frecuencia
#Documentación de seewave: fpeaks.
#Aparentemente fpeaks puede llegar a consumir muchos recursos, para solucionar eso.
#Se baja el sample rate, pero con el cuidado de tener en cuenta las frecuencias
#presentes en el audio.
derrape.fpeaks <- fpeaks(derrape.spec)
plot(derrape.fpeaks)
derrape
derrape.fpeaks
#Documentación de seewave: fpeaks.
#Aparentemente fpeaks puede llegar a consumir muchos recursos, para solucionar eso.
#Se baja el sample rate, pero con el cuidado de tener en cuenta las frecuencias
#presentes en el audio. #ATENCIÓN: La salida es una matriz de cada pico, su amplitud y su frecuencia.
derrape.fpeaks <- fpeaks(derrape.spec, plot = TRUE)
derrape.fpeaks
df <- data.frame(frequency = p@freq, normalize = p@normalize)
df
p
dfreq(derrape, plot=TRUE)
plot(derrape.per)
#FRECUENCIA DOMINANTE: el audio principal, (nos puede servir para poder aislarla)
derrape.per
df <- data.frame(frequency = p@freq, normalize = p@width)
df
df <- data.frame(frequency = p@freq, normalize = p@spec)
df
max(p@spec)
df <- data.frame(frequency = p@freq, spec = p@spec)
df
plot(df)
plot(df, name="ALGO")
plot(df, main="ALGO")
df
#Frecuenciad dominante puede ser útil: dfreq(), sirve para algo parecido, pero toma un wave
dfreq(derrape, plot=TRUE)
